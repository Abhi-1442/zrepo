Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas (master)
$ cd merge-mergesort/

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort (master)
$ source setup.sh
Initialized empty Git repository in C:/Users/Likki. Abhinay Reddy/ZDay-1/git-katas/merge-mergesort/exercise/.git/
warning: in the working copy of 'mergesort.py', LF will be replaced by CRLF the next time Git touches it
[master (root-commit) 36238dd] Fake it till you make it - Faking mergesort using python .sort() method
 1 file changed, 5 insertions(+)
 create mode 100644 mergesort.py
Switched to a new branch 'Mergesort-Impl'
warning: in the working copy of 'mergesort.py', LF will be replaced by CRLF the next time Git touches it
[Mergesort-Impl 596c81b] Mergesort implemented on feature branch
 1 file changed, 43 insertions(+), 3 deletions(-)
Switched to branch 'master'
warning: in the working copy of 'mergesort.py', LF will be replaced by CRLF the next time Git touches it
[master 7ad3656] Mergesort implemented on master
 1 file changed, 43 insertions(+), 3 deletions(-)

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master)
$ ls
mergesort.py

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master)
$ git branch
  Mergesort-Impl
* master

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master)
$ git log
commit 7ad36562d2936cb9da7ad5fd26a557def8642ad4 (HEAD -> master)
Author: Abhinay <abhinay1442@gmail.com>
Date:   Wed Nov 9 22:11:11 2022 +0530

    Mergesort implemented on master

commit 36238ddd931b3fa919f0a3c32ec409342bba2200
Author: Abhinay <abhinay1442@gmail.com>
Date:   Wed Nov 9 22:11:09 2022 +0530

    Fake it till you make it - Faking mergesort using python .sort() method

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master)
$ git status
On branch master
nothing to commit, working tree clean

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master)
$ git switch Mergesort-Impl
Switched to branch 'Mergesort-Impl'

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (Mergesort-Impl)
$ ls
mergesort.py

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (Mergesort-Impl)
$ git status
On branch Mergesort-Impl
nothing to commit, working tree clean

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (Mergesort-Impl)
$ cat mergesort.py
from heapq import merge

def merge_sort2(m):
    """Sort list, using two part merge sort"""
    if len(m) <= 1:
        return m

    # Determine the pivot point
    middle = len(m) // 2

    # Split the list at the pivot
    right = m[middle:]
    left = m[:middle]

    # Sort recursively
    right = merge_sort2(right)
    left = merge_sort2(left)

    # Merge and return
    return list(merge(right, left))

def merge_sort4(m):
    """Sort list, using four part merge sort"""
    if len(m) <= 4:
        return sorted(m)

    # Determine the pivot point
    middle = len(m) // 2
    leftMiddle = middle // 2
    rightMiddle = middle + leftMiddle

    # Split the list at the pivots
    first = m[:leftMiddle]
    second = m[leftMiddle:middle]
    third = m[middle:rightMiddle]
    fourth = m[rightMiddle:]

    # Sort recursively
    first = merge_sort4(first)
    second = merge_sort4(second)
    third = merge_sort4(third)
    fourth = merge_sort4(fourth)

    # Merge and return
    return list(merge(first,second, third, fourth))

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (Mergesort-Impl)
$ git log
commit 596c81baaa87f4424a279d3fb0cb6fdbf803abde (HEAD -> Mergesort-Impl)
Author: Abhinay <abhinay1442@gmail.com>
Date:   Wed Nov 9 22:11:10 2022 +0530

    Mergesort implemented on feature branch

commit 36238ddd931b3fa919f0a3c32ec409342bba2200
Author: Abhinay <abhinay1442@gmail.com>
Date:   Wed Nov 9 22:11:09 2022 +0530

    Fake it till you make it - Faking mergesort using python .sort() method

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (Mergesort-Impl)
$ git switch branch
fatal: invalid reference: branch

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (Mergesort-Impl)
$ git switch master
Switched to branch 'master'

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master)
$ git merge Mergesort-Impl
Auto-merging mergesort.py
CONFLICT (content): Merge conflict in mergesort.py
Automatic merge failed; fix conflicts and then commit the result.

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master|MERGING)
$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   mergesort.py

no changes added to commit (use "git add" and/or "git commit -a")

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master|MERGING)
$ cat mergesort.py
from heapq import merge

def merge_sort2(m):
    """Sort list, using two part merge sort"""
    if len(m) <= 1:
        return m

    # Determine the pivot point
    middle = len(m) // 2

    # Split the list at the pivot
<<<<<<< HEAD
    left = m[:middle]
    right = m[middle:]
=======
    right = m[middle:]
    left = m[:middle]
>>>>>>> Mergesort-Impl

    # Sort recursively
    right = merge_sort2(right)
    left = merge_sort2(left)

    # Merge and return
    return list(merge(right, left))

def merge_sort4(m):
    """Sort list, using four part merge sort"""
    if len(m) <= 4:
        return sorted(m)

    # Determine the pivot point
    middle = len(m) // 2
    leftMiddle = middle // 2
    rightMiddle = middle + leftMiddle

    # Split the list at the pivots
    first = m[:leftMiddle]
    second = m[leftMiddle:middle]
    third = m[middle:rightMiddle]
<<<<<<< HEAD
    last = m[rightMiddle:]
=======
    fourth = m[rightMiddle:]
>>>>>>> Mergesort-Impl

    # Sort recursively
    first = merge_sort4(first)
    second = merge_sort4(second)
    third = merge_sort4(third)
<<<<<<< HEAD
    last = merge_sort4(last)

    # Merge and return
    return list(merge(first, second, third, last))
=======
    fourth = merge_sort4(fourth)

    # Merge and return
    return list(merge(first,second, third, fourth))
>>>>>>> Mergesort-Impl

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master|MERGING)
$ vi mergesort.py

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master|MERGING)
$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   mergesort.py

no changes added to commit (use "git add" and/or "git commit -a")

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master|MERGING)
$ git add mergesort.py

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master|MERGING)
$ git commit -m "changed the code"
[master d08e9f2] changed the code

Likki. Abhinay Reddy@LAPTOP-Q095STBU MINGW64 ~/ZDay-1/git-katas/merge-mergesort/exercise (master)
$ git status
On branch master
nothing to commit, working tree clean
